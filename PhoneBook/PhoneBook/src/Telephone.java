
import java.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.util.*;

public class Telephone extends javax.swing.JFrame implements ListSelectionListener {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	int cont = 4;

    private JList listbox1;
    private JList listbox2;
    private JList listbox3;
    private JList listsearch1;
    private JList listsearch2;
    private JList listsearch3;

    private Vector listData1;
    private Vector listData2;
    private Vector listData3;
    private Vector searchData1;
    private Vector searchData2;
    private Vector searchData3;

    private JScrollPane scrollPane1;
    private JScrollPane scrollPane2;
    private JScrollPane scrollPane3;

    private JScrollPane jsp1;
    private JScrollPane jsp2;
    private JScrollPane jsp3;

    /** Creates new form Telephone */
    public Telephone() {

        listData1 = new Vector();
        listData2 = new Vector();
        listData3 = new Vector();

        searchData1 = new Vector();
        searchData2 = new Vector();
        searchData3 = new Vector();

        // Create a new listbox control
        listbox1 = new JList(listData1);
        listbox2 = new JList(listData2);
        listbox3 = new JList(listData3);

        listsearch1 = new JList(searchData1);
        listsearch2 = new JList(searchData2);
        listsearch3 = new JList(searchData3);

        listbox1.addListSelectionListener(this);
        listbox2.addListSelectionListener(this);
        listbox3.addListSelectionListener(this);

        listsearch1.addListSelectionListener(this);
        listsearch2.addListSelectionListener(this);
        listsearch3.addListSelectionListener(this);

        scrollPane1 = new JScrollPane();
        scrollPane1.setViewportView(listbox1);
        scrollPane1.setBounds(20, 50, 170, 150);

        scrollPane2 = new JScrollPane();
        scrollPane2.setViewportView(listbox2);
        scrollPane2.setBounds(200, 50, 170, 150);

        scrollPane3 = new JScrollPane();
        scrollPane3.setViewportView(listbox3);
        scrollPane3.setBounds(380, 50, 170, 150);

        jsp1 = new JScrollPane();
        jsp1.setViewportView(listsearch1);
        jsp1.setBounds(20, 50, 170, 150);

        jsp2 = new JScrollPane();
        jsp2.setViewportView(listsearch2);
        jsp2.setBounds(200, 50, 170, 150);

        jsp3 = new JScrollPane();
        jsp3.setViewportView(listsearch3);
        jsp3.setBounds(380, 50, 170, 150);

        initComponents();
        panelDisplay.add(scrollPane1);
        panelDisplay.add(scrollPane2);
        panelDisplay.add(scrollPane3);

        panelSearch.add(jsp1);
        panelSearch.add(jsp2);
        panelSearch.add(jsp3);

    }

    public void valueChanged(ListSelectionEvent event) {
        // See if this is a listbox selection and the
        // event stream has settled
        int i = -1;
        if (event.getSource() == listbox1 && !event.getValueIsAdjusting()) {
            i = listbox1.getSelectedIndex();
            listbox2.setSelectedIndex(i);
            listbox3.setSelectedIndex(i);

        }
        if (event.getSource() == listbox2 && !event.getValueIsAdjusting()) {
            i = listbox2.getSelectedIndex();
            listbox1.setSelectedIndex(i);
            listbox3.setSelectedIndex(i);

        }
        if (event.getSource() == listbox3 && !event.getValueIsAdjusting()) {
            i = listbox3.getSelectedIndex();
            listbox1.setSelectedIndex(i);
            listbox2.setSelectedIndex(i);

        }

        // Search results......

        if (event.getSource() == listsearch1 && !event.getValueIsAdjusting()) {
            i = listsearch1.getSelectedIndex();
            listsearch2.setSelectedIndex(i);
            listsearch3.setSelectedIndex(i);

        }
        if (event.getSource() == listsearch2 && !event.getValueIsAdjusting()) {
            i = listsearch2.getSelectedIndex();
            listsearch3.setSelectedIndex(i);
            listsearch1.setSelectedIndex(i);

        }
        if (event.getSource() == listsearch3 && !event.getValueIsAdjusting()) {
            i = listsearch3.getSelectedIndex();
            listsearch1.setSelectedIndex(i);
            listsearch2.setSelectedIndex(i);

        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        JTabbedPane1 = new javax.swing.JTabbedPane();
        panelAdd = new javax.swing.JPanel();
        txtFName = new javax.swing.JTextField();
        txtLName = new javax.swing.JTextField();
        txtPNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmdAdd = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();
        lblmsg = new javax.swing.JLabel();
        panelModify = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtDelf = new javax.swing.JTextField();
        txtDell = new javax.swing.JTextField();
        txtDelp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmdDelete = new javax.swing.JButton();
        cmdSearchp = new javax.swing.JButton();
        lblres = new javax.swing.JLabel();
        panelSearch = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtfirst = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtlast = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        fsearch = new javax.swing.JButton();
        lsearch = new javax.swing.JButton();
        psearch = new javax.swing.JButton();
        panelDisplay = new javax.swing.JPanel();
        cmdSortLname = new javax.swing.JButton();
        cmdSortPno = new javax.swing.JButton();
        cmdDisplay = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        getContentPane().setLayout(null);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        panelAdd.setLayout(null);

        txtFName.setFont(new java.awt.Font("Courier New", 0, 12));
        panelAdd.add(txtFName);
        txtFName.setBounds(270, 70, 170, 19);

        txtLName.setFont(new java.awt.Font("Courier New", 0, 12));
        panelAdd.add(txtLName);
        txtLName.setBounds(270, 110, 170, 19);

        txtPNo.setFont(new java.awt.Font("Courier New", 0, 12));
        panelAdd.add(txtPNo);
        txtPNo.setBounds(270, 150, 170, 19);

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel1.setText("First Name");
        panelAdd.add(jLabel1);
        jLabel1.setBounds(170, 70, 100, 15);

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel2.setText("Last Name");
        panelAdd.add(jLabel2);
        jLabel2.setBounds(170, 110, 100, 15);

        jLabel3.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel3.setText("Phone Number");
        panelAdd.add(jLabel3);
        jLabel3.setBounds(170, 150, 100, 15);

        cmdAdd.setText("Save");
        cmdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAddActionPerformed(evt);
            }
        });

        panelAdd.add(cmdAdd);
        cmdAdd.setBounds(180, 220, 75, 23);

        cmdCancel.setText("Cancel");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        panelAdd.add(cmdCancel);
        cmdCancel.setBounds(370, 220, 75, 23);

        lblmsg.setFont(new java.awt.Font("Verdana", 1, 14));
        panelAdd.add(lblmsg);
        lblmsg.setBounds(110, 320, 410, 50);

        JTabbedPane1.addTab("Add", panelAdd);

        panelModify.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel6.setText("First Name");
        panelModify.add(jLabel6);
        jLabel6.setBounds(100, 120, 100, 15);

        txtDelf.setFont(new java.awt.Font("Courier New", 0, 12));
        txtDelf.setEnabled(false);
        panelModify.add(txtDelf);
        txtDelf.setBounds(200, 120, 170, 19);

        txtDell.setFont(new java.awt.Font("Courier New", 0, 12));
        txtDell.setEnabled(false);
        panelModify.add(txtDell);
        txtDell.setBounds(200, 160, 170, 19);

        txtDelp.setFont(new java.awt.Font("Courier New", 0, 12));
        txtDelp.setEnabled(false);
        panelModify.add(txtDelp);
        txtDelp.setBounds(200, 50, 170, 19);

        jLabel7.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel7.setText("Phone Number");
        panelModify.add(jLabel7);
        jLabel7.setBounds(100, 50, 100, 15);

        jLabel8.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel8.setText("Last Name");
        panelModify.add(jLabel8);
        jLabel8.setBounds(100, 160, 100, 15);

        cmdDelete.setText("Delete");
        cmdDelete.setEnabled(false);
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        panelModify.add(cmdDelete);
        cmdDelete.setBounds(230, 220, 75, 23);

        cmdSearchp.setText("Search");
        cmdSearchp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSearchpActionPerformed(evt);
            }
        });

        panelModify.add(cmdSearchp);
        cmdSearchp.setBounds(380, 50, 71, 23);

        lblres.setFont(new java.awt.Font("Verdana", 1, 14));
        panelModify.add(lblres);
        lblres.setBounds(120, 320, 310, 40);

        JTabbedPane1.addTab("Delete", panelModify);

        panelSearch.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel10.setText("First Name");
        panelSearch.add(jLabel10);
        jLabel10.setBounds(100, 290, 100, 15);

        txtfirst.setFont(new java.awt.Font("Courier New", 0, 12));
        panelSearch.add(txtfirst);
        txtfirst.setBounds(200, 290, 170, 19);

        jLabel11.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel11.setText("Last Name");
        panelSearch.add(jLabel11);
        jLabel11.setBounds(100, 330, 100, 15);

        txtlast.setFont(new java.awt.Font("Courier New", 0, 12));
        panelSearch.add(txtlast);
        txtlast.setBounds(200, 330, 170, 19);

        jLabel12.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel12.setText("Phone Number");
        panelSearch.add(jLabel12);
        jLabel12.setBounds(100, 370, 100, 15);

        txtphone.setFont(new java.awt.Font("Courier New", 0, 12));
        txtphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphoneActionPerformed(evt);
            }
        });

        panelSearch.add(txtphone);
        txtphone.setBounds(200, 370, 170, 19);

        fsearch.setText("Search");
        fsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fsearchActionPerformed(evt);
            }
        });

        panelSearch.add(fsearch);
        fsearch.setBounds(390, 290, 75, 23);

        lsearch.setText("Search");
        lsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lsearchActionPerformed(evt);
            }
        });

        panelSearch.add(lsearch);
        lsearch.setBounds(390, 330, 75, 23);

        psearch.setText("Search");
        psearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psearchActionPerformed(evt);
            }
        });

        panelSearch.add(psearch);
        psearch.setBounds(390, 370, 75, 23);

        JTabbedPane1.addTab("Search", panelSearch);

        panelDisplay.setLayout(null);

        cmdSortLname.setText("Sort by Last Name");
        cmdSortLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSortLnameActionPerformed(evt);
            }
        });

        panelDisplay.add(cmdSortLname);
        cmdSortLname.setBounds(60, 290, 140, 23);

        cmdSortPno.setText("Sort by Phone Number");
        cmdSortPno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSortPnoActionPerformed(evt);
            }
        });

        panelDisplay.add(cmdSortPno);
        cmdSortPno.setBounds(370, 290, 160, 23);

        cmdDisplay.setText("Display");
        cmdDisplay.setPreferredSize(null);
        cmdDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDisplayActionPerformed(evt);
            }
        });

        panelDisplay.add(cmdDisplay);
        cmdDisplay.setBounds(240, 10, 80, 23);

        JTabbedPane1.addTab("View All", panelDisplay);

        getContentPane().add(JTabbedPane1);
        JTabbedPane1.setBounds(0, 0, 630, 470);

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("New Record");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Save Record");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Save File...");
        jMenu1.add(jMenuItem3);

        jMenu1.add(jSeparator1);

        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem6.setText("Delete Record");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });

        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Search");
        jMenuItem7.setText("By First Name");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });

        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("By Last Name");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });

        jMenu3.add(jMenuItem8);

        jMenuItem9.setText("By Phone Number");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });

        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("View");
        jMenuItem10.setText("View All");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });

        jMenu4.add(jMenuItem10);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Help");
        jMenuItem5.setText("About");
        jMenu5.add(jMenuItem5);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 637) / 2, (screenSize.height - 525) / 2, 637, 525);
    }

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {
        JTabbedPane1.setSelectedIndex(3);
    }

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {
        JTabbedPane1.setSelectedIndex(2);
    }

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {
        JTabbedPane1.setSelectedIndex(2);
    }

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {
        JTabbedPane1.setSelectedIndex(1);
    }

    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        String first = txtDelf.getText();
        String last = txtDell.getText();
        String phone = txtDelp.getText();
        File myfile1, myfile2;
        if (!(first.equals("") || last.equals("") || phone.equals(""))) {
            if (JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Delete",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                int cnt = 4;
                int counter1 = 0;
                int counter2 = 0;
                int counter3 = 0;
                boolean result = false;
                String thisLine;
                String strfname[] = new String[250];
                String strlname[] = new String[250];
                String strpno[] = new String[250];

                try {

                    FileOutputStream fos = new FileOutputStream("D:\\temp.txt");
                    PrintStream myOutput = new PrintStream(fos);

                    FileInputStream fis = new FileInputStream("D:\\theText.txt");
                    DataInputStream myInput = new DataInputStream(fis);

                    while ((thisLine = myInput.readLine()) != null) {
                        if (cnt % 3 == 1) {
                            strfname[counter1] = thisLine;

                            counter1++;
                        } else if (cnt % 3 == 2) {

                            strlname[counter2] = thisLine;

                            counter2++;

                        } else if (cnt % 3 == 0) {

                            strpno[counter3] = thisLine;

                            counter3++;
                        }

                        cnt++;

                    }

                    for (int k = 0; strpno[k] != null; k++) {
                        if (strpno[k].equalsIgnoreCase(phone)) {
                            result = true;
                        } else {
                            myOutput.println(strfname[k]);
                            myOutput.println(strlname[k]);
                            myOutput.println(strpno[k]);
                        }
                    }

                    fos.close();
                    fis.close();
                    if (result == true) {

                        lblres.setText("Record Deleted Sucessfully");
                        cmdDelete.setEnabled(false);
                        txtDelf.setText("");
                        txtDell.setText("");
                        txtDelp.setText("");

                    }

                } catch (Exception ex) {
                    System.out.println(ex);
                }

                if (result == true) {

                    myfile1 = new File("D:\\theText.txt");
                    myfile2 = new File("D:\\temp.txt");
                    if (myfile1.delete()) {
                        System.out.println(myfile1.getName() + " is successfully deleted");
                        myfile2.renameTo(myfile1);
                      } else {
                        System.out.println("Failed to delete " + myfile1.getName() + " file");
                      }
                   


                }

            }

            else {
                lblres.setText("Record not Deleted");
            }
        }
    }

    private void cmdSearchpActionPerformed(java.awt.event.ActionEvent evt) {
        // String search = txtDelp.getText();

        String search = JOptionPane.showInputDialog(null, "Please enter the phone number?", "Search for phone number",
                JOptionPane.OK_CANCEL_OPTION);
        txtDelp.setText(search);

        int cnt = 4;
        int counter1 = 0;
        int counter2 = 0;
        int counter3 = 0;
        boolean result = false;
        String thisLine;
        String strfname[] = new String[250];
        String strlname[] = new String[250];
        String strpno[] = new String[250];

        try {
            FileInputStream fis = new FileInputStream("D:\\theText.txt");
            DataInputStream myInput = new DataInputStream(fis);

            while ((thisLine = myInput.readLine()) != null) {
                if (cnt % 3 == 1) {
                    strfname[counter1] = thisLine;

                    counter1++;
                } else if (cnt % 3 == 2) {

                    strlname[counter2] = thisLine;

                    counter2++;

                } else if (cnt % 3 == 0) {

                    strpno[counter3] = thisLine;

                    counter3++;
                }

                cnt++;

            }
            for (int k = 0; strpno[k] != null; k++) {
                if (strpno[k].equalsIgnoreCase(search)) {
                    txtDelf.setText(strfname[k]);
                    txtDell.setText(strlname[k]);
                    result = true;
                    lblres.setText("1 Record Found");
                    cmdDelete.setEnabled(true);

                }
            }

            fis.close();
            if (result != true) {

                lblres.setText("No matches found !!");

            }

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {
        txtFName.setText("");
        txtLName.setText("");
        txtPNo.setText("");
    }

    private void psearchActionPerformed(java.awt.event.ActionEvent evt) {
        String search = txtphone.getText();
        int cnt = 4;
        int counter1 = 0;
        int counter2 = 0;
        int counter3 = 0;
        boolean result = false;
        String thisLine;
        String strfname[] = new String[250];
        String strlname[] = new String[250];
        String strpno[] = new String[250];

        searchData1.removeAllElements();
        searchData2.removeAllElements();
        searchData3.removeAllElements();

        try {
            FileInputStream fis = new FileInputStream("D:\\theText.txt");
            DataInputStream myInput = new DataInputStream(fis);

            while ((thisLine = myInput.readLine()) != null) {
                if (cnt % 3 == 1) {
                    strfname[counter1] = thisLine;

                    counter1++;
                } else if (cnt % 3 == 2) {

                    strlname[counter2] = thisLine;

                    counter2++;

                } else if (cnt % 3 == 0) {

                    strpno[counter3] = thisLine;

                    counter3++;
                }

                cnt++;

            }
            for (int k = 0; strpno[k] != null; k++) {
                if (strpno[k].equalsIgnoreCase(search)) {

                    searchData1.addElement(strfname[k]);
                    listsearch1.setListData(searchData1);

                    searchData2.addElement(strlname[k]);
                    listsearch2.setListData(searchData2);

                    searchData3.addElement(strpno[k]);
                    listsearch3.setListData(searchData3);

                    jsp1.revalidate();
                    jsp1.repaint();
                    jsp2.revalidate();
                    jsp2.repaint();
                    jsp3.revalidate();
                    jsp3.repaint();

                    txtfirst.setText("");
                    txtlast.setText("");

                    result = true;
                }
            }

            if (result != true) {
                searchData1.removeAllElements();
                searchData2.removeAllElements();
                searchData3.removeAllElements();
                jsp1.revalidate();
                jsp1.repaint();
                jsp2.revalidate();
                jsp2.repaint();
                jsp3.revalidate();
                jsp3.repaint();
                txtfirst.setText("No matches found");
                txtlast.setText("No matches found");
            }

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    private void lsearchActionPerformed(java.awt.event.ActionEvent evt) {
        String search = txtlast.getText();
        int cnt = 4;
        int counter1 = 0;
        int counter2 = 0;
        int counter3 = 0;
        boolean result = false;
        String thisLine;
        String strfname[] = new String[250];
        String strlname[] = new String[250];
        String strpno[] = new String[250];

        searchData1.removeAllElements();
        searchData2.removeAllElements();
        searchData3.removeAllElements();

        try {
            FileInputStream fis = new FileInputStream("D:\\theText.txt");
            DataInputStream myInput = new DataInputStream(fis);

            while ((thisLine = myInput.readLine()) != null) {
                if (cnt % 3 == 1) {
                    strfname[counter1] = thisLine;

                    counter1++;
                } else if (cnt % 3 == 2) {

                    strlname[counter2] = thisLine;

                    counter2++;

                } else if (cnt % 3 == 0) {

                    strpno[counter3] = thisLine;

                    counter3++;
                }

                cnt++;

            }
            for (int k = 0; strlname[k] != null; k++) {
                if (strlname[k].equalsIgnoreCase(search)) {

                    searchData1.addElement(strfname[k]);
                    listsearch1.setListData(searchData1);

                    searchData2.addElement(strlname[k]);
                    listsearch2.setListData(searchData2);

                    searchData3.addElement(strpno[k]);
                    listsearch3.setListData(searchData3);

                    jsp1.revalidate();
                    jsp1.repaint();
                    jsp2.revalidate();
                    jsp2.repaint();
                    jsp3.revalidate();
                    jsp3.repaint();

                    txtfirst.setText("");
                    txtphone.setText("");
                    result = true;
                }
            }

            if (result != true) {
                searchData1.removeAllElements();
                searchData2.removeAllElements();
                searchData3.removeAllElements();
                jsp1.revalidate();
                jsp1.repaint();
                jsp2.revalidate();
                jsp2.repaint();
                jsp3.revalidate();
                jsp3.repaint();
                txtfirst.setText("No matches found");
                txtphone.setText("No matches found");
            }

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    private void txtphoneActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void fsearchActionPerformed(java.awt.event.ActionEvent evt) {
        String search = txtfirst.getText();

        int cnt = 4;
        int counter1 = 0;
        int counter2 = 0;
        int counter3 = 0;
        boolean result = false;
        String thisLine;
        String strfname[] = new String[250];
        String strlname[] = new String[250];
        String strpno[] = new String[250];

        searchData1.removeAllElements();
        searchData2.removeAllElements();
        searchData3.removeAllElements();

        try {
            FileInputStream fis = new FileInputStream("D:\\theText.txt");
            DataInputStream myInput = new DataInputStream(fis);

            while ((thisLine = myInput.readLine()) != null) {
                if (cnt % 3 == 1) {
                    strfname[counter1] = thisLine;

                    counter1++;
                } else if (cnt % 3 == 2) {

                    strlname[counter2] = thisLine;

                    counter2++;

                } else if (cnt % 3 == 0) {

                    strpno[counter3] = thisLine;

                    counter3++;
                }

                cnt++;

            }
            for (int k = 0; strfname[k] != null; k++) {
                if (strfname[k].equalsIgnoreCase(search)) {

                    searchData1.addElement(strfname[k]);
                    listsearch1.setListData(searchData1);

                    searchData2.addElement(strlname[k]);
                    listsearch2.setListData(searchData2);

                    searchData3.addElement(strpno[k]);
                    listsearch3.setListData(searchData3);

                    jsp1.revalidate();
                    jsp1.repaint();
                    jsp2.revalidate();
                    jsp2.repaint();
                    jsp3.revalidate();
                    jsp3.repaint();

                    result = true;

                }
            }

            if (result != true) {
                searchData1.removeAllElements();
                searchData2.removeAllElements();
                searchData3.removeAllElements();
                jsp1.revalidate();
                jsp1.repaint();
                jsp2.revalidate();
                jsp2.repaint();
                jsp3.revalidate();
                jsp3.repaint();
                txtlast.setText("No matches found");
                txtphone.setText("No matches found");

            }

        } catch (Exception ex) {
            System.out.println(ex);
        }

    }

    private void cmdSortPnoActionPerformed(java.awt.event.ActionEvent evt) {
        int cnt = 4;
        String thisLine;
        String strfname[] = new String[250];
        String strlname[] = new String[250];
        String strpno[] = new String[250];
        try {

            int counter1 = 0;
            int counter2 = 0;
            int counter3 = 0;
            FileInputStream fis = new FileInputStream("D:\\theText.txt");
            DataInputStream myInput = new DataInputStream(fis);

            listData1.removeAllElements();
            listData2.removeAllElements();
            listData3.removeAllElements();

            while ((thisLine = myInput.readLine()) != null) {
                if (cnt % 3 == 1) {
                    strfname[counter1] = thisLine;

                    listData1.addElement(thisLine);
                    listbox1.setListData(listData1);
                    scrollPane1.revalidate();
                    scrollPane1.repaint();
                    counter1++;
                } else if (cnt % 3 == 2) {

                    strlname[counter2] = thisLine;

                    listData2.addElement(thisLine);
                    listbox2.setListData(listData2);
                    scrollPane2.revalidate();
                    scrollPane2.repaint();
                    counter2++;

                } else if (cnt % 3 == 0) {

                    strpno[counter3] = thisLine;

                    listData3.addElement(thisLine);
                    listbox3.setListData(listData3);
                    scrollPane3.revalidate();
                    scrollPane3.repaint();
                    counter3++;
                }

                cnt++;

            }

        } catch (Exception ex) {
            System.out.println(ex);
        }

        // Sorting data

        int a, b;
        int Num, Smallest;
        String TmpStr1, TmpStr2;
        String OneLine, TmpStr;
        String f1, ftmp1, ftmp2, p1, ptmp1, ptmp2;

        Num = 0;
        for (int k = 0; strlname[k] != null; k++) {
            Num = k + 1;
        }
        System.out.println(Num);

        for (a = 0; a < Num - 1; a++) {
            Smallest = a;

            OneLine = strlname[Smallest];
            f1 = strfname[Smallest];
            p1 = strpno[Smallest];

            for (b = a + 1; b < Num; b++) {
                if (p1.compareToIgnoreCase(strpno[b]) > 0) {

                    OneLine = strlname[b];

                    f1 = strfname[b];
                    p1 = strpno[b];

                    Smallest = b;
                }

            }

            if (Smallest != a) {

                TmpStr1 = strlname[a];
                TmpStr2 = strlname[Smallest];

                ftmp1 = strfname[a];
                ftmp2 = strfname[Smallest];
                ptmp1 = strpno[a];
                ptmp2 = strpno[Smallest];

                strfname[a] = ftmp2;
                strfname[Smallest] = ftmp1;

                strpno[a] = ptmp2;
                strpno[Smallest] = ptmp1;

                strlname[a] = TmpStr2;
                strlname[Smallest] = TmpStr1;

            }

        }

        listData3.removeAllElements();
        for (int k = 0; strpno[k] != null; k++)
            listData3.addElement(strpno[k]);

        listData2.removeAllElements();
        for (int k = 0; strlname[k] != null; k++)
            listData2.addElement(strlname[k]);

        listData1.removeAllElements();
        for (int k = 0; strfname[k] != null; k++)
            listData1.addElement(strfname[k]);

        listbox1.setListData(listData1);
        scrollPane1.revalidate();
        scrollPane1.repaint();

        listbox2.setListData(listData2);
        scrollPane2.revalidate();
        scrollPane2.repaint();

        listbox3.setListData(listData3);
        scrollPane3.revalidate();
        scrollPane3.repaint();

    }

    private void cmdSortLnameActionPerformed(java.awt.event.ActionEvent evt) {
        int cnt = 4;
        String thisLine;
        String strfname[] = new String[250];
        String strlname[] = new String[250];
        String strpno[] = new String[250];
        try {

            int counter = 0;
            int counter1 = 0;
            int counter2 = 0;
            int counter3 = 0;
            FileInputStream fis = new FileInputStream("D:\\theText.txt");
            DataInputStream myInput = new DataInputStream(fis);

            listData1.removeAllElements();
            listData2.removeAllElements();
            listData3.removeAllElements();

            while ((thisLine = myInput.readLine()) != null) {
                if (cnt % 3 == 1) {
                    strfname[counter1] = thisLine;

                    listData1.addElement(thisLine);
                    listbox1.setListData(listData1);
                    scrollPane1.revalidate();
                    scrollPane1.repaint();
                    counter1++;
                } else if (cnt % 3 == 2) {

                    strlname[counter2] = thisLine;

                    listData2.addElement(thisLine);
                    listbox2.setListData(listData2);
                    scrollPane2.revalidate();
                    scrollPane2.repaint();
                    counter2++;

                } else if (cnt % 3 == 0) {

                    strpno[counter3] = thisLine;

                    listData3.addElement(thisLine);
                    listbox3.setListData(listData3);
                    scrollPane3.revalidate();
                    scrollPane3.repaint();
                    counter3++;
                }

                cnt++;

            }

        } catch (Exception ex) {
            System.out.println(ex);
        }

        // Sorting data

        int a, b;
        int Num, Smallest;
        String TmpStr1, TmpStr2;
        String OneLine, TmpStr;
        String f1, ftmp1, ftmp2, p1, ptmp1, ptmp2;

        Num = 0;
        for (int k = 0; strlname[k] != null; k++) {
            Num = k + 1;
        }
        System.out.println(Num);

        for (a = 0; a < Num - 1; a++) {
            Smallest = a;

            OneLine = strlname[Smallest];
            f1 = strfname[Smallest];
            p1 = strpno[Smallest];

            for (b = a + 1; b < Num; b++) {
                if (OneLine.compareToIgnoreCase(strlname[b]) > 0) {

                    OneLine = strlname[b];

                    f1 = strfname[b];
                    p1 = strpno[b];

                    Smallest = b;
                }

            }

            if (Smallest != a) {

                TmpStr1 = strlname[a];
                TmpStr2 = strlname[Smallest];

                ftmp1 = strfname[a];
                ftmp2 = strfname[Smallest];
                ptmp1 = strpno[a];
                ptmp2 = strpno[Smallest];

                strfname[a] = ftmp2;
                strfname[Smallest] = ftmp1;

                strpno[a] = ptmp2;
                strpno[Smallest] = ptmp1;

                strlname[a] = TmpStr2;
                strlname[Smallest] = TmpStr1;

            }

        }

        listData3.removeAllElements();
        for (int k = 0; strpno[k] != null; k++)
            listData3.addElement(strpno[k]);

        listData2.removeAllElements();
        for (int k = 0; strlname[k] != null; k++)
            listData2.addElement(strlname[k]);

        listData1.removeAllElements();
        for (int k = 0; strfname[k] != null; k++)
            listData1.addElement(strfname[k]);

        listbox1.setListData(listData1);
        scrollPane1.revalidate();
        scrollPane1.repaint();

        listbox2.setListData(listData2);
        scrollPane2.revalidate();
        scrollPane2.repaint();

        listbox3.setListData(listData3);
        scrollPane3.revalidate();
        scrollPane3.repaint();

    }

    private void SortLine() {
        int a, b;
        int Num, Smallest;

        String OneLine, TmpStr;

        Num = listData2.capacity();
        System.out.println(Num);

        for (a = 0; a < Num - 1; a++) {
            Smallest = a;
            OneLine = (String) listData2.get(Smallest);

            for (b = a + 1; b < Num; b++) {
                if (OneLine.compareTo((String) listData2.get(b)) > 0) {

                    OneLine = (String) listData2.get(b);
                    Smallest = b;
                }
            }

            if (Smallest != a) {
                Swap(a, Smallest);

            }
        }

    }

    private void Swap(int a, int b) {
        String TmpStr1, TmpStr2;

        TmpStr1 = (String) listData2.get(a);
        TmpStr2 = (String) listData2.get(b);

        listData2.removeElementAt(a);
        listData2.add(a, TmpStr2);
        listData2.removeElementAt(b);
        listData2.add(b, TmpStr1);

    }

    private void cmdDisplayActionPerformed(java.awt.event.ActionEvent evt) {
        int cnt = 4;
        try {

            String thisLine;
            String[] fullText = new String[10];
            int counter = 0;
            FileInputStream fis = new FileInputStream("D:\\theText.txt");
            DataInputStream myInput = new DataInputStream(fis);

            listData1.removeAllElements();
            listData2.removeAllElements();
            listData3.removeAllElements();

            while ((thisLine = myInput.readLine()) != null) {

                if (cnt % 3 == 1) {

                    listData1.addElement(thisLine);
                    listbox1.setListData(listData1);
                    scrollPane1.revalidate();
                    scrollPane1.repaint();
                } else if (cnt % 3 == 2) {

                    listData2.addElement(thisLine);
                    listbox2.setListData(listData2);
                    scrollPane2.revalidate();
                    scrollPane2.repaint();

                } else if (cnt % 3 == 0) {
                    listData3.addElement(thisLine);
                    listbox3.setListData(listData3);
                    scrollPane3.revalidate();
                    scrollPane3.repaint();

                }

                cnt++;
                counter++;

            }

        } catch (Exception ex) {
            System.out.println(ex);
        }

    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {
        JTabbedPane1.setSelectedIndex(0);
    }

    private void cmdAddActionPerformed(java.awt.event.ActionEvent evt) {

        String first = txtFName.getText();
        String last = txtLName.getText();
        String phone = txtPNo.getText();

        if (first.equals(""))
            lblmsg.setText("Invalid First Name");
        else if (last.equals(""))
            lblmsg.setText("Invalid Last Name");
        else if (phone.equals("") || phone.length() < 10)
            lblmsg.setText("Invalid Phone Number");
        else {

            int cnt = 4;
            int counter1 = 0;
            int counter2 = 0;
            int counter3 = 0;
            boolean result = false;
            String thisLine;

            String strfname[] = new String[250];
            String strlname[] = new String[250];
            String strpno[] = new String[250];

            try {
                FileInputStream fis = new FileInputStream("D:\\theText.txt");
                DataInputStream myInput = new DataInputStream(fis);

                while ((thisLine = myInput.readLine()) != null) {
                    if (cnt % 3 == 1) {
                        strfname[counter1] = thisLine;

                        counter1++;
                    } else if (cnt % 3 == 2) {

                        strlname[counter2] = thisLine;

                        counter2++;

                    } else if (cnt % 3 == 0) {

                        strpno[counter3] = thisLine;

                        counter3++;
                    }

                    cnt++;

                }
                for (int k = 0; strpno[k] != null; k++) {
                    if (strpno[k].equalsIgnoreCase(phone)) {
                        lblmsg.setText("Duplicate Phone numbers found..");
                        System.out.println("Duplicate Phone numbers");
                        result = true;
                    }
                }

                for (int k = 0; strfname[k] != null; k++) {
                    if (strfname[k].equalsIgnoreCase(first)) {

                        if (strlname[k].equalsIgnoreCase(last)) {

                            lblmsg.setText("Duplicate Names Found");
                            System.out.println("Duplicate Names Found");
                            result = true;
                        }
                    }
                }

                for (int k = 0; strlname[k] != null; k++) {
                    if (strlname[k].equalsIgnoreCase(last)) {

                        if (strfname[k].equalsIgnoreCase(first)) {
                            lblmsg.setText("Duplicate Names Found");
                            System.out.println("Duplicate Names Found");
                            result = true;
                        }
                    }
                }
                fis.close();

            } catch (Exception ex1) {
                System.out.println(ex1);
            }

            if (!result) {
                try {

                    int i;
                    String[] text = new String[3];
                    text[0] = txtFName.getText();
                    text[1] = txtLName.getText();
                    text[2] = txtPNo.getText();
                    FileOutputStream fos = new FileOutputStream("D:\\theText.txt", true);
                    PrintStream myOutput = new PrintStream(fos);

                    for (i = 0; i < 3; i++) {
                        myOutput.println(text[i]);
                    }

                    txtFName.setText("");
                    txtLName.setText("");
                    txtPNo.setText("");
                    lblmsg.setText("Records have beed saved successfully");
                    fos.close();
                } catch (IOException IO) {
                }
            }

        } // end else
    }

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {
        JTabbedPane1.setSelectedIndex(2);
    }

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {
        System.exit(0);
    }

    public static void main(String args[]) {
        new Telephone().show();
    }

    // Variables declaration - do not modify
    private javax.swing.JTabbedPane JTabbedPane1;
    private javax.swing.JButton cmdAdd;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdDelete;
    private javax.swing.JButton cmdDisplay;
    private javax.swing.JButton cmdSearchp;
    private javax.swing.JButton cmdSortLname;
    private javax.swing.JButton cmdSortPno;
    private javax.swing.JButton fsearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblmsg;
    private javax.swing.JLabel lblres;
    private javax.swing.JButton lsearch;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelDisplay;
    private javax.swing.JPanel panelModify;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JButton psearch;
    private javax.swing.JTextField txtDelf;
    private javax.swing.JTextField txtDell;
    private javax.swing.JTextField txtDelp;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtPNo;
    private javax.swing.JTextField txtfirst;
    private javax.swing.JTextField txtlast;
    private javax.swing.JTextField txtphone;
    // End of variables declaration

}
